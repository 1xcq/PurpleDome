# -*- mode: ruby -*-
# vi: set ft=ruby :

# Setup Environment
#
require 'yaml'
settings = YAML.load_file 'network.settings.yaml'
$default_network_interface = `ip route | awk '/^default/ {printf "%s", $5; exit 0}'`
interface = settings["interface"].nil? ? "#$default_network_interface" : settings["interface"]

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  #
  ## TARGET 1
  # 
	config.vm.define "target1" do |target1|
    # Image
    target1.vm.box = "ubuntu/jammy64"

    # Network settings
    if settings['use_private']
      # use private_network (host-only, not accessible from your local network) -> might break some challenges
      target1.vm.network :private_network, type: "dhcp"
    else
      # To make box accessible on your whole network
      if !settings['static_ips']
        target1.vm.network "public_network", :bridge => interface, hostname: true, type: "dhcp"
      else
        target1.vm.network "public_network", :bridge => interface, ip: settings['static_ips'][0] , hostname: true
      end
    end
	  target1.vm.hostname = "target1"
	  target1.vm.define "target1"
	  target1.vm.synced_folder ".", "/vagrant"

    # Simulated hardware
	  target1.vm.provider "virtualbox" do |v|
	    v.memory = 1024
	    v.cpus = 2
    end

    # Provision box
	  target1.vm.provision "shell", inline: <<-SHELL
	  ls /vagrant
	  cd /vagrant/target1
	  chmod +x bootstrap.sh
	  sudo ./bootstrap.sh
	  SHELL
	end

  #
  ## TARGET 2
  # 
	config.vm.define "target2" do |target2|
    # Image
    target2.vm.box = "ubuntu/jammy64"

    # Network settings
    if settings['use_private']
      # use private_network (host-only, not accessible from your local network) -> might break some challenges
      target2.vm.network :private_network, type: "dhcp"
    else
      # To make box accessible on your whole network
      if !settings['static_ips']
        target2.vm.network "public_network", :bridge => interface, hostname: true, type: "dhcp"
      else
        target2.vm.network "public_network", :bridge => interface, ip: settings['static_ips'][1] , hostname: true
      end
    end
    # comment out below to use private_network (host-only, not accessible from your local network) -> might break some challenges
    # target2.vm.network :private_network, type: "dhcp"
	  target2.vm.hostname = "target2"
	  target2.vm.define "target2"
	  target2.vm.synced_folder ".", "/vagrant"

	  target2.vm.provider "virtualbox" do |v|
	    v.memory = 1024
	    v.cpus = 2
    end

    # Provision box
	  target2.vm.provision "shell", inline: <<-SHELL
	  ls /vagrant
	  cd /vagrant/target2
	  chmod +x bootstrap.sh
	  sudo ./bootstrap.sh
	  SHELL
	end
end
